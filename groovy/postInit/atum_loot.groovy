import com.cleanroommc.groovyscript.event.LootTablesLoadedEvent
import net.minecraft.world.storage.loot.LootContext

event_manager.listen { LootTablesLoadedEvent event ->
    patchCrate(event)
}

def patchCrate(event) {
    event.loot.getTable('atum:chests/crate').removePool('atum:crate')
    event.loot.getTable('atum:chests/crate').addPool(
        event.loot.poolBuilder()
            .name('custom')
            .entry(
                event.loot.entryBuilder()
                    .item(item('minecraft:clay_ball'))
                    .function{ ItemStack stack, Random random, LootContext context ->
                        stack.setCount(1)
                        return stack
                    }
                    .weight(16)
                    .quality(1)
                    .build()
            )
            .entry(
                event.loot.entryBuilder()
                    .item(item('pyrotech:rock_netherrack'))
                    .function{ ItemStack stack, Random random, LootContext context ->
                        stack.setCount(1)
                        return stack
                    }
                    .weight(6)
                    .quality(1)
                    .build()
	        )
			.entry(
                event.loot.entryBuilder()
				    .item(item('atum:coin_dirty'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('atum:loot_dirty_idol'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('atum:loot_dirty_necklace'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('atum:loot_dirty_ring'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('atum:loot_dirty_broach'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('atum:loot_dirty_scepter'))
					.weight(1)
					.quality(1)
					.build()
			)
            .rollsRange(1.0f, 4.0f)
            .bonusRollsRange(0.0f, 0.0f)
            .build()
    )
    event.loot.getTable('atum:chests/crate').addPool(
        event.loot.poolBuilder()
            .name('custom_special')
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:star_cloak'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:fire_gauntlet'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:night_vision_goggles'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:feral_claws'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:power_glove'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:mechanical_glove'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:shock_pendant'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:flame_pendant'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:thorn_pendant'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:ultimate_pendant'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:panic_necklace'))
					.weight(1)
					.quality(1)
					.build()
			)
			.entry(
                event.loot.entryBuilder()
				    .item(item('artifacts:lucky_horseshoe'))
					.weight(1)
					.quality(1)
					.build()
			)
            .rollsRange(0.0f, 0.1f)
            .bonusRollsRange(0.0f, 0.0f)
            .build()
    )
}
